---
import "../styles/variables.scss";
import "../styles/base.scss";
import "../styles/utilities.scss";
import "../styles/layout.scss";
import "../styles/theme.scss";
import "../styles/common.scss";
import "../styles/footer.scss";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import VantaBackground from "../components/VantaBackground.astro";
import ravenLogoWhite from "../assets/raven-logo-sm.png";
import ravenLogoBlack from "../assets/raven-logo-sm-blk.png";

interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: URL | string;
  type?: "website" | "article" | "profile";
  keywords?: string[];
}

const {
  title = "Jeff Scotti - Senior Front End Engineer, Senior UI/UX Designer",
  description = "Jeff Scotti is a Senior Front End Engineer and UI/UX Designer with 15+ years of experience building intuitive, high-performance web applications.",
  image = new URL("/assets/js-headshot.png", Astro.site || Astro.url),
  canonicalURL = Astro.url,
  type = "profile",
  keywords = [
    "Front End Engineer",
    "UI/UX Designer",
    "Web Developer",
    "JavaScript",
    "React",
    "User Experience",
  ],
} = Astro.props;

// Ensure canonicalURL is a URL object
const canonicalURLObj =
  canonicalURL instanceof URL ? canonicalURL : new URL(canonicalURL, Astro.site || Astro.url);
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />

    <!-- SEO Meta Tags -->
    <meta
      name="description"
      content={description ||
        "Jeff Scotti is a Senior Front End Engineer and UI/UX Designer with 15+ years of experience building intuitive, high-performance web applications."}
    />
    <meta name="keywords" content={keywords.join(", ")} />
    <meta name="author" content="Jeff Scotti" />
    <link rel="canonical" href={canonicalURLObj} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalURLObj} />
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content={description ||
        "Jeff Scotti is a Senior Front End Engineer and UI/UX Designer with 15+ years of experience building intuitive, high-performance web applications."}
    />
    <meta property="og:image" content={image} />
    <meta property="og:site_name" content="Jeff Scotti" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURLObj} />
    <meta property="twitter:title" content={title} />
    <meta
      property="twitter:description"
      content={description ||
        "Jeff Scotti is a Senior Front End Engineer and UI/UX Designer with 15+ years of experience building intuitive, high-performance web applications."}
    />
    <meta property="twitter:image" content={image} />

    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://ka-f.fontawesome.com" crossorigin />
    <link rel="preconnect" href="https://kit.fontawesome.com" crossorigin />

    <!-- Preload critical resources -->
    <link
      rel="preload"
      href="/fonts/poppins/Poppins-Regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/poppins/Poppins-Bold.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <link
      rel="preload"
      href="/fonts/poppins/Poppins-SemiBold.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <!-- Preload logo images to prevent layout shift during navigation -->
    <link rel="preload" as="image" href={ravenLogoWhite.src} type="image/png" />
    <link rel="preload" as="image" href={ravenLogoBlack.src} type="image/png" />
    <!-- Note: Preloading the image is handled by the Image component with fetchpriority="high" -->

    <!-- Inline critical theme detection to avoid FOUC -->
    <script is:inline>
      (function () {
        const savedTheme = localStorage.getItem("theme");
        if (savedTheme) {
          document.documentElement.classList.add(savedTheme);
        } else {
          // Set dark theme as default
          document.documentElement.classList.add("theme-dark");
          localStorage.setItem("theme", "theme-dark");
        }
      })();
    </script>

    <!-- Favicons -->
    <link rel="icon" type="image/ico" href="/favicon.ico" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-72x72.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114x114.png" />

    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <!-- Load FontAwesome with defer to not block rendering -->
    <script src="https://kit.fontawesome.com/ad9e6c27c0.js" crossorigin="anonymous" defer></script>

    <!-- Inline critical CSS for initial render -->
    <style is:inline>
      :root {
        --primary-color: #007bff;
        --text-color: #333;
        --bg-color: #fff;
      }
      .theme-dark {
        --text-color: #f5f5f5;
        --bg-color: #222;
      }
      body {
        margin: 0;
        font-family: "Poppins", sans-serif;
        color: var(--text-color);
        background-color: var(--bg-color);
      }
      .page-container {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
      }
    </style>

    <!-- Load non-critical CSS asynchronously -->
    <link
      rel="stylesheet"
      href="/styles/owl.carousel.css"
      media="print"
      onload="this.media='all'"
    />
    <noscript><link rel="stylesheet" href="/styles/owl.carousel.css" /></noscript>
  </head>
  <body>
    <VantaBackground />
    <div class="page-container">
      <Header />
      <slot />
      <Footer />
    </div>

    <!-- JSON-LD Structured Data -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Person",
        "name": "Jeff Scotti",
        "url": "https://jeffscotti.net",
        "image": "https://jeffscotti.net/assets/js-headshot.png",
        "jobTitle": "Senior Front End Engineer & Senior UI/UX Designer",
        "description": "I build intuitive, high-performance web applications by combining clean, efficient code with thoughtful design.",
        "sameAs": ["https://linkedin.com/in/jeffscotti", "https://github.com/scottij1"],
        "email": "jeff@jeffscotti.net",
        "knowsAbout": [
          "Front-end Engineer",
          "Front End Development",
          "UI/UX Design",
          "JavaScript",
          "React",
          "Web Performance"
        ]
      }
    </script>

    <!-- Add content-visibility to improve rendering performance -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        if ("IntersectionObserver" in window) {
          const sections = document.querySelectorAll("section, footer, .testimonials-container");

          const observer = new IntersectionObserver(
            (entries) => {
              entries.forEach((entry) => {
                // When element is not in viewport
                const el = entry.target as HTMLElement;
                if (!entry.isIntersecting) {
                  el.style.contentVisibility = "auto";
                  el.style.containIntrinsicSize = "0 500px";
                } else {
                  el.style.contentVisibility = "visible";
                  el.style.containIntrinsicSize = "auto";
                }
              });
            },
            {
              rootMargin: "100px", // Load slightly before they come into view
            },
          );

          sections.forEach((section) => {
            observer.observe(section);
          });
        }
      });
    </script>
  </body>
</html>
