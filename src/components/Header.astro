---
import '../styles/header.scss';
import Logo from './Logo.astro';

// Get the current path to determine active menu item
const { pathname } = Astro.url;

// Function to check if a path is active
const isActive = (path) => {
  if (path === '/' && pathname === '/') return true;
  if (path !== '/' && pathname.startsWith(path)) return true;
  return false;
};
---

<header id="site_header" class="header">
  <div class="header-content">
    <!-- Logo -->
    <div class="site-logo">
      <a href="/">
        <Logo />
      </a>
    </div>
    <!-- /Logo -->

    <!-- Navigation -->
    <div class="site-nav">
      <ul class="site-main-menu">
        <li class={`menu-item ${isActive('/') ? 'current-menu-item' : ''}`}>
          <a href="/">Home</a>
        </li>

        <li class={`menu-item ${isActive('/about') ? 'current-menu-item' : ''}`}>
          <a href="/about">About</a>
        </li>

        <li class={`menu-item ${isActive('/projects') ? 'current-menu-item' : ''}`}>
          <a href="/projects">Projects</a>
        </li>
    
        <li class={`menu-item ${isActive('/contact') ? 'current-menu-item' : ''}`}>
          <a href="/contact">Contact</a>
        </li>
      </ul>
    </div>
    <!-- /Navigation -->

    <!-- Mobile Menu Toggle -->
    <a class="menu-toggle">
      <span class="hamburger-line line-1"></span>
      <span class="hamburger-line line-2"></span>
      <span class="hamburger-line line-3"></span>
    </a>
    <!-- /Mobile Menu Toggle -->
  </div>
</header>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const menuToggle = document.querySelector('.menu-toggle');
  const siteNav = document.querySelector('.site-nav');

  if (menuToggle && siteNav) {
    menuToggle.addEventListener('click', () => {
      siteNav.classList.toggle('open');
      menuToggle.classList.toggle('open');
    });
  }

  // Debounce resize events
  let resizeTimer;
  window.addEventListener('resize', () => {
    // Immediately remove any transition to prevent animation during resize
    siteNav.style.transition = 'none';
    menuToggle.style.transition = 'none';
    siteNav.classList.remove('open');
    menuToggle.classList.remove('open');

    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(() => {
      // Restore the original transitions after resize is finished
      siteNav.style.transition = '';
      menuToggle.style.transition = '';
    }, 200);
  });

  // Handle submenu toggles for mobile
  const menuItemsWithChildren = document.querySelectorAll('.menu-item-has-children > a');
  menuItemsWithChildren.forEach(item => {
    item.addEventListener('click', (e) => {
      if (window.innerWidth <= 991) {
        e.preventDefault();
        const parent = item.parentElement;
        const subMenu = parent.querySelector('.sub-menu');
        if (subMenu) {
          subMenu.classList.toggle('open');
        }
      }
    });
  });
});
</script>
