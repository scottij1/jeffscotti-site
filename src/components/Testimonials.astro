---
import TestimonialItem from "./TestimonialItem.astro";
import {testimonials} from "../data/testimonials";

interface Props {
  title?: string;
  subtitle?: string;
}

const {title = "Testimonials"} = Astro.props;

const testimonialsToShow = testimonials.filter((testimonial) => testimonial.visible !== false);
---

<!-- Import Owl Carousel CSS with media attribute to make it non-blocking -->
<link
  rel="stylesheet"
  href="/styles/owl.carousel.css"
  type="text/css"
  media="print"
  onload="this.media='all'"
/>
<!-- Fallback for browsers that don't support onload -->
<noscript><link rel="stylesheet" href="/styles/owl.carousel.css" type="text/css" /></noscript>

<div class="testimonials-container">
  <div class="block-title">
    <h2>{title}</h2>
  </div>

  <div
    id="testimonials_1"
    class="testimonials"
    data-mobile-items="1"
    data-tablet-items="2"
    data-items="2">
    {testimonialsToShow.map((testimonial) => <TestimonialItem testimonial={testimonial} />)}
  </div>
</div>

<!-- Load scripts with defer attribute -->
<script src="/js/jquery-3.5.1.min.js" defer></script>
<script src="/js/owl.carousel.min.js" defer></script>

<script>
  declare const jQuery: any;

  // Use Intersection Observer to initialize carousel only when visible
  document.addEventListener("DOMContentLoaded", () => {
    const initCarousel = () => {
      if (typeof jQuery !== "undefined") {
        // Initialize Owl Carousel
        jQuery("#testimonials_1")
          .addClass("owl-carousel")
          .owlCarousel({
            nav: false, // Hide next/prev buttons
            items: 2, // The number of items you want to see on the screen
            loop: true, // Infinity loop
            navText: false,
            margin: 25,
            lazyLoad: true,
            responsive: {
              // breakpoint from 0 up
              0: {
                items: 1,
              },
              // breakpoint from 480 up
              480: {
                items: 1,
              },
              // breakpoint from 768 up
              768: {
                items: 2,
              },
              1200: {
                items: 2,
              },
            },
          });

        // Add read more / show less functionality
        setupReadMoreLinks();
      }
    };

    // Use Intersection Observer to initialize carousel only when visible
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // Use requestIdleCallback to defer initialization
            if ("requestIdleCallback" in window) {
              (window as any).requestIdleCallback(() => {
                initCarousel();
              });
            } else {
              // Fallback for browsers that don't support requestIdleCallback
              setTimeout(initCarousel, 1);
            }
            observer.disconnect();
          }
        });
      },
      {threshold: 0.1},
    );

    const testimonials = document.querySelector(".testimonials-container");
    if (testimonials) {
      observer.observe(testimonials);
    }
  });

  // Function to set up read more and show less links - optimized with event delegation
  function setupReadMoreLinks() {
    // Use event delegation instead of attaching events to each link
    document.addEventListener("click", function (e) {
      const target = e.target as HTMLElement;

      // Handle read more links
      if (target.classList.contains("read-more-link")) {
        e.preventDefault();

        const testimonialText = target.closest(".testimonial-text") as HTMLElement;
        if (!testimonialText) return;

        // Show the hidden text
        const hiddenText = testimonialText.querySelector(".hidden-text") as HTMLElement;
        if (hiddenText) hiddenText.style.display = "inline";

        // Hide read more link
        const readMoreContainer = testimonialText.querySelector(
          ".read-more-container",
        ) as HTMLElement;
        if (readMoreContainer) readMoreContainer.style.display = "none";

        // Show show less link
        const showLessContainer = testimonialText.querySelector(
          ".show-less-container",
        ) as HTMLElement;
        if (showLessContainer) showLessContainer.style.display = "inline";
      }

      // Handle show less links
      if (target.classList.contains("show-less-link")) {
        e.preventDefault();

        const testimonialText = target.closest(".testimonial-text") as HTMLElement;
        if (!testimonialText) return;

        // Hide the hidden text
        const hiddenText = testimonialText.querySelector(".hidden-text") as HTMLElement;
        if (hiddenText) hiddenText.style.display = "none";

        // Show read more link
        const readMoreContainer = testimonialText.querySelector(
          ".read-more-container",
        ) as HTMLElement;
        if (readMoreContainer) readMoreContainer.style.display = "inline";

        // Hide show less link
        const showLessContainer = testimonialText.querySelector(
          ".show-less-container",
        ) as HTMLElement;
        if (showLessContainer) showLessContainer.style.display = "none";
      }
    });
  }
</script>

<style is:global>
  /* Read more / show less styles */
  .read-more-link,
  .show-less-link {
    color: var(--primary-color);
    text-decoration: none;
    cursor: pointer;
    font-weight: 500;
  }

  .read-more-link:hover,
  .show-less-link:hover {
    text-decoration: underline;
  }
  .testimonials-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .testimonial-item {
    padding: 30px;
    margin-bottom: 10px;
  }

  .testimonial-content {
    position: relative;
    padding: 30px 20px 20px 60px;
    background-color: var(--container-bg-color);
    border-radius: var(--border-radius-md);
    border: 2px solid var(--border-color);
    -webkit-transition: all 0.25s ease-in-out;
    -moz-transition: all 0.25s ease-in-out;
    -o-transition: all 0.25s ease-in-out;
    -ms-transition: all 0.25s ease-in-out;
    transition: all 0.25s ease-in-out;
  }

  .testimonial-picture {
    position: absolute;
    display: block;
    top: -30px;
    left: -30px;
    width: 80px;
    height: 80px;
  }

  .testimonial-picture img {
    display: inline-block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
    border: 2px solid var(--border-color);
  }

  .testimonial-text p {
    font-style: italic;
    color: var(--text-color);
  }

  .testimonial-author-info {
    margin-top: 15px;
  }

  .testimonial-author {
    margin: 0 0 2px;
    font-size: 0.9em;
    color: var(--heading-color);
  }

  .testimonial-firm {
    margin: 0;
    font-size: 0.8em;
    color: var(--text-color);
    opacity: 0.8;
  }

  .testimonial-icon {
    display: block;
    line-height: 20px;
    font-size: 20px;
    position: absolute;
    left: 20px;
    bottom: 46px;
    color: var(--border-color);
  }

  .testimonial-icon-big {
    display: block;
    line-height: 44px;
    font-size: 44px;
    position: absolute;
    right: -24px;
    bottom: -24px;
    color: var(--border-color);
    opacity: 0.2;
    z-index: -1;
  }

  /* Owl Carousel Navigation */
  .testimonials.owl-carousel .owl-dots {
    position: relative;
    width: 100%;
    text-align: center;
  }

  .testimonials.owl-carousel .owl-dot {
    display: inline-block;
    margin: 3px 0;
  }

  .testimonials.owl-carousel .owl-dot span {
    display: block;
    height: 3px;
    background-color: var(--border-color);
    border-radius: 3px;
    margin: 4px;
    width: 20px;
    -webkit-transition: all 0.25s ease-in-out;
    -moz-transition: all 0.25s ease-in-out;
    -o-transition: all 0.25s ease-in-out;
    -ms-transition: all 0.25s ease-in-out;
    transition: all 0.25s ease-in-out;
  }

  .testimonials.owl-carousel .owl-dot.active span,
  .testimonials.owl-carousel .owl-dot:hover span {
    background-color: var(--primary-color);
  }

  .testimonials.owl-carousel .owl-dot.active span {
    width: 30px;
  }

  @media (max-width: 768px) {
    .testimonial-content {
      margin-right: 30px;
    }
  }
</style>
