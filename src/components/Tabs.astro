---
import {tabItems} from "../data/tabs";

const firstTabId = tabItems.length > 0 ? tabItems[0].id : "";
---

<link rel="stylesheet" href="/styles/et-line.css" type="text/css" />

<script
  type="text/javascript"
  src="https://kit.fontawesome.com/ad9e6c27c0.js"
  crossorigin="anonymous">
</script>

<div class="tabs-container">
  <!-- Desktop Tabs -->
  <ul class="tab-buttons nav nav-tabs tpl-alt-tabs desktop-tabs">
    {
      tabItems.map((tab, index) => (
        <li class={index === 0 ? "active" : ""}>
          <a href={`#${tab.id}`} class="tab-btn" data-tab={tab.id} aria-label={`${tab.title} tab`}>
            <div class="alt-tabs-icon">
              <span class={tab.icon} />
            </div>
            {tab.title}
          </a>
        </li>
      ))
    }
  </ul>

  <!-- Mobile Accordion -->
  <div class="mobile-accordion">
    {
      tabItems.map((tab, index) => (
        <div class={`accordion-item ${index === 0 ? "active" : ""}`} data-tab={tab.id}>
          <div class="accordion-header">
            <div class="accordion-icon">
              <span class={tab.icon} />
            </div>
            <div class="accordion-title">{tab.title}</div>
            <div class="accordion-toggle">
              <i class="fa fa-chevron-down" />
            </div>
          </div>
          <div class="accordion-content" style={index === 0 ? "display: block;" : ""}>
            <div id={`accordion-${tab.id}`}>
              {tab.content.map((paragraph) => (
                <p set:html={paragraph} />
              ))}

              <div class="testimonial-content">
                <div class="testimonial-text">
                  <p>
                    <span>{tab.testimonial.text}</span>
                  </p>
                </div>
                <div class="testimonial-author-info">
                  <h5 class="testimonial-author">{tab.testimonial.author}</h5>
                  <p class="testimonial-firm">{tab.testimonial.company}</p>
                </div>
                <div class="testimonial-icon">
                  <i class="fa fa-quote-left" />
                </div>
                <div class="testimonial-icon-big">
                  <i class="fa fa-quote-right" />
                </div>
              </div>
            </div>
          </div>
        </div>
      ))
    }
  </div>

  <div class="tab-content-wrapper tpl-tabs-cont desktop-tabs-content">
    {
      tabItems.map((tab, index) => (
        <div class={`tab-content ${index === 0 ? "active" : ""}`} id={tab.id}>
          <section id={tab.id}>
            {tab.content.map((paragraph) => (
              <p set:html={paragraph} />
            ))}

            <div class="testimonial-content">
              <div class="testimonial-text">
                <p>
                  <span>{tab.testimonial.text}</span>
                </p>
              </div>
              <div class="testimonial-author-info">
                <h5 class="testimonial-author">{tab.testimonial.author}</h5>
                <p class="testimonial-firm">{tab.testimonial.company}</p>
              </div>
              <div class="testimonial-icon">
                <i class="fa fa-quote-left" />
              </div>
              <div class="testimonial-icon-big">
                <i class="fa fa-quote-right" />
              </div>
            </div>
          </section>
        </div>
      ))
    }
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Desktop tabs functionality
    const tabLinks = document.querySelectorAll<HTMLAnchorElement>(".tab-btn");
    const tabContents = document.querySelectorAll<HTMLDivElement>(".tab-content");
    const tabItems = document.querySelectorAll<HTMLLIElement>(".tab-buttons li");

    tabLinks.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();

        tabItems.forEach((item) => item.classList.remove("active"));
        tabContents.forEach((content) => content.classList.remove("active"));

        const parentLi = link.closest("li");
        if (parentLi) {
          parentLi.classList.add("active");
        }

        const tabId = link.dataset.tab;
        if (tabId) {
          const tabContent = document.getElementById(tabId);
          if (tabContent) {
            tabContent.classList.add("active");
          }
        }
      });
    });

    // Mobile accordion functionality
    const accordionItems = document.querySelectorAll<HTMLDivElement>(".accordion-item");
    const accordionHeaders = document.querySelectorAll<HTMLDivElement>(".accordion-header");

    accordionHeaders.forEach((header) => {
      header.addEventListener("click", () => {
        const accordionItem = header.parentElement as HTMLDivElement;
        const accordionContent = header.nextElementSibling as HTMLDivElement;
        const isActive = accordionItem.classList.contains("active");

        accordionItems.forEach((item) => {
          item.classList.remove("active");
          const content = item.querySelector(".accordion-content") as HTMLDivElement;
          if (content) {
            content.style.display = "none";
          }
        });

        if (!isActive) {
          accordionItem.classList.add("active");
          accordionContent.style.display = "block";
        }
      });
    });
  });
</script>

<style>
  .tabs-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto 30px;
    padding: 20px;
  }

  /* Desktop Tabs Styling */
  .desktop-tabs {
    display: flex;
    padding: 0;
    margin: 0;
    list-style: none;
    justify-content: center;
  }

  .desktop-tabs li {
    margin-right: 10px;
  }

  .tab-btn {
    display: block;
    text-decoration: none;
    padding: 10px 20px;
    color: inherit;
    transition: all 0.27s cubic-bezier(0, 0, 0.58, 1);
    cursor: pointer;
    border-radius: 3px;
    text-align: center;
    font-weight: 600;
  }

  .tab-btn:hover {
    color: var(--primary-color);
  }

  .desktop-tabs li.active .tab-btn {
    color: var(--active-color);
  }

  /* Icon styling */
  .alt-tabs-icon {
    display: block;
    margin-bottom: 12px;
    font-size: 48px;
    letter-spacing: 0;
    text-align: center;
    color: var(--text-color);
    transition: all 0.27s cubic-bezier(0, 0, 0.58, 1);
  }

  .tab-btn:hover .alt-tabs-icon {
    color: var(--primary-color);
  }

  .desktop-tabs li.active .alt-tabs-icon {
    color: var(--active-color);
  }

  /* Content styling */
  .tab-content-wrapper {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    min-height: 225px; /* Set a minimum height to prevent layout shifts */
  }

  .tab-content {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    visibility: hidden;
    padding: 25px 50px;
    transition:
      opacity 0.3s ease,
      visibility 0.3s ease;
    border-radius: 3px;
  }

  .tab-content.active {
    position: relative;
    opacity: 1;
    visibility: visible;
  }

  /* Mobile Accordion Styling */
  .mobile-accordion {
    display: none;
    max-width: 800px;
    margin: 0 auto;
  }

  .accordion-item {
    margin-bottom: 10px;
    border-radius: 3px;
    border: 1px solid var(--border-color, #eee);
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .accordion-item.active {
    border-color: transparent;
  }

  .accordion-header {
    display: flex;
    align-items: center;
    padding: 15px;
    cursor: pointer;
    background-color: transparent;
    transition: all 0.3s ease;
    color: white;
  }

  .accordion-item.active .accordion-header {
    color: var(--active-color);
  }

  .accordion-icon {
    font-size: 24px;
    margin-right: 15px;
    color: inherit;
    transition: all 0.3s ease;
  }

  .accordion-header:hover {
    color: var(--primary-color);
  }

  .accordion-title {
    flex-grow: 1;
    font-weight: 500;
  }

  .accordion-toggle {
    transition: transform 0.3s ease;
    color: inherit;
  }

  .accordion-item.active .accordion-toggle {
    transform: rotate(180deg);
  }

  .accordion-content {
    display: none;
    padding: 20px;
  }

  .testimonial-content {
    position: relative;
    margin-top: 50px;
    padding: 30px 20px 20px 60px;
    border-radius: var(--border-radius-md, 5px);
    border: 2px solid var(--border-color, #eee);
    transition: all 0.25s ease-in-out;
  }

  .testimonial-text p {
    font-style: italic;
    color: var(--text-color, #333);
    margin-bottom: 10px;
  }

  .testimonial-author-info {
    margin-top: 15px;
  }

  .testimonial-author {
    margin: 0 0 2px;
    font-size: 0.9em;
    color: var(--heading-color, #333);
    font-weight: 600;
  }

  .testimonial-firm {
    margin: 0;
    font-size: 0.8em;
    color: var(--text-color, #777);
    opacity: 0.8;
  }

  .testimonial-icon {
    display: block;
    line-height: 20px;
    font-size: 20px;
    position: absolute;
    left: 20px;
    bottom: 46px;
    color: var(--border-color, #ddd);
  }

  .testimonial-icon-big {
    display: block;
    line-height: 44px;
    font-size: 44px;
    position: absolute;
    right: -24px;
    bottom: -24px;
    color: var(--border-color, #ddd);
    opacity: 0.2;
    z-index: -1;
  }

  /* Responsive adjustments */
  @media only screen and (max-width: 768px) {
    .desktop-tabs,
    .desktop-tabs-content {
      display: none;
    }

    .mobile-accordion {
      display: block;
    }

    .testimonial-content {
      margin-top: 20px;
      padding: 25px 15px 15px 50px;
    }

    .testimonial-icon {
      font-size: 16px;
      left: 15px;
      bottom: 40px;
    }

    .testimonial-icon-big {
      font-size: 36px;
      right: -18px;
      bottom: -18px;
    }

    .tabs-container {
      padding: 0;
      margin: 0 auto;
    }
  }
</style>
