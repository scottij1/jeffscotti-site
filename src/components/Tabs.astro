<!-- Import et-line icons -->
<link
  rel="stylesheet"
  href="/styles/et-line.css"
  type="text/css"
/>

<div class="tabs-container">
  <ul class="tab-buttons nav nav-tabs tpl-alt-tabs">
    <li class="active">
      <a
        href="#front-end-engineering"
        class="tab-btn"
        data-tab="front-end-engineering"
      >
        <div class="alt-tabs-icon">
          <span class="icon-layers"></span>
        </div>
        Front-End Engineering
      </a>
    </li>
    <li>
      <a
        href="#ux-design"
        class="tab-btn"
        data-tab="ux-design"
      >
        <div class="alt-tabs-icon">
          <span class="icon-target"></span>
        </div>
        User Experience Design
      </a>
    </li>
    <li>
      <a
        href="#ui-design"
        class="tab-btn"
        data-tab="ui-design"
      >
        <div class="alt-tabs-icon">
          <span class="icon-browser"></span>
        </div>
        User Interface Design
      </a>
    </li>
    <li>
      <a
        href="#project-management"
        class="tab-btn"
        data-tab="project-management"
      >
        <div class="alt-tabs-icon">
          <span class="icon-chat"></span>
        </div>
        Collaboration &amp; Leadership
      </a>
    </li>
  </ul>
  <div class="tab-content-wrapper tpl-tabs-cont">
    <div
      class="tab-content active"
      id="front-end-engineering"
    >
      <section id="front-end-engineering">
        <p>
          I love to code. What really drives me is <strong>problem-solving</strong> and front-end development
          gives me plenty of puzzles to crack. For over a decade, I’ve been building <strong
            >scalable, performant UIs</strong
          > with a range of technologies including <strong
            >TypeScript, JavaScript, React, and Material UI</strong
          >, crafting seamless user experiences that are both <strong
            >intuitive and efficient</strong
          >.
        </p>
        <p>
          I specialize in <strong>component-driven development</strong>, ensuring modularity and
          reusability while optimizing render performance and state management. My work extends
          beyond UI development, I integrate <strong>GraphQL APIs</strong>, fine-tune <strong
            >progressive web app (PWA) functionality</strong
          >, and streamline workflows with <strong>modern build tools like Vite and Webpack</strong
          >.
        </p>
        <p>
          Whether it’s <strong
            >architecting a structured wizard flow, refining a design system, or solving a tricky UI
            state issue</strong
          >, I thrive on making front-end experiences feel fast, polished, and rock solid.
        </p>
      </section>
    </div>
    <div
      class="tab-content"
      id="ux-design"
    >
      <p>
        I approach UX design with a <strong>principle-driven mindset</strong>. I rely on a set of
        <strong>adaptable yet consistent guidelines</strong> that shape my decisions, keep my work objective,
        and create a <strong>shared vision</strong> for every project. These principles ensure that no
        matter the complexity, my process stays <strong
          >structured, user-focused, and goal-oriented</strong
        >.
      </p>
      <p>
        At the core of my philosophy is <strong>deep user empathy</strong>. To design effective
        solutions, I strive to <strong
          >understand users, their pain points, and how they think</strong
        >. Not just as data points, but as real people with real needs. By putting myself in their
        shoes, I can
        <strong>anticipate friction points</strong>, <strong>streamline interactions</strong>, and
        create experiences that feel <strong>natural from the first click</strong>.
      </p>
      <p>
        Great UX isn’t just about how something looks. It’s about <strong>removing barriers</strong
        >,
        <strong>reducing cognitive load</strong>, and <strong
          >making technology work effortlessly</strong
        >
        for the user. Whether I’m designing onboarding flows, structuring information, or refining interactive
        elements, every decision is backed by <strong
          >research, usability testing, and real-world feedback</strong
        >
        to create <strong>clear, effective, and engaging experiences</strong>.
      </p>
    </div>
    <div
      class="tab-content"
      id="ui-design"
    >
      <section id="ui-design">
        <p>
          Users eat with their eyes first, and <strong>presentation is critical</strong>. When
          building an enterprise product, it should <strong
            >look and feel like an enterprise product</strong
          >, polished, professional, and intentional. Design isn’t just about making something look
          good; it’s about setting the right expectations and reinforcing trust through
          <strong>clarity, structure, and visual hierarchy</strong>.
        </p>
        <p>
          I err on the side of <strong>simplicity</strong>. I prefer <strong
            >clean, uncluttered, purposeful design</strong
          >, where every element serves a function and <strong
            >negative space isn’t wasted space</strong
          >, it’s an active part of the experience. A good UI should guide the user effortlessly,
          reducing friction without drawing attention to itself. Some say the best UI is one that
          goes unnoticed, and while that may be true, I’ve found that
          <strong>users notice a lot more than we think</strong>. Every small detail—spacing,
          typography, color contrast, motion subtly influences their perception, even if they can’t
          articulate why.
        </p>
      </section>
    </div>
    <div
      class="tab-content"
      id="project-management"
    >
      <p>
        I believe that great products come from <strong
          >efficient workflows, clear communication, and a culture of accountability</strong
        >. I’m always looking for ways to streamline development, cut down on bottlenecks, and
        remove unnecessary friction so teams can focus on building. That means implementing <strong
          >smarter processes, not more processes</strong
        >, whether it’s refining sprint planning, optimizing code review pipelines, or introducing
        automation to reduce repetitive tasks. Every change should serve one goal:
        <strong>speeding up development without sacrificing quality</strong>.
      </p>
      <p>
        <strong>Work/life balance</strong> is just as important as hitting deadlines. I’ve seen what
        happens when teams get caught in
        <strong>project creep and endless crunch cycles</strong>, it kills morale and burns people
        out. A well-rested worker is a happy worker, and a happy worker is a productive worker.
        We’re here to build great products, not save the world, so there’s no need to act like we
        are.
      </p>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const tabLinks = document.querySelectorAll<HTMLAnchorElement>(".tab-btn");
    const tabContents = document.querySelectorAll<HTMLDivElement>(".tab-content");
    const tabItems = document.querySelectorAll<HTMLLIElement>(".tab-buttons li");

    tabLinks.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();

        // Remove active class from all tabs and contents
        tabItems.forEach((item) => item.classList.remove("active"));
        tabContents.forEach((content) => content.classList.remove("active"));

        // Add active class to current tab and content
        const parentLi = link.closest("li");
        if (parentLi) {
          parentLi.classList.add("active");
        }

        const tabId = link.dataset.tab;
        if (tabId) {
          const tabContent = document.getElementById(tabId);
          if (tabContent) {
            tabContent.classList.add("active");
          }
        }
      });
    });
  });
</script>

<style>
  .tabs-container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto 30px;
    padding: 20px;
  }

  .tab-buttons {
    display: flex;
    padding: 0;
    margin: 0;
    list-style: none;
    justify-content: center;
  }

  .tab-buttons li {
    margin-right: 10px;
  }

  .tab-btn {
    display: block;
    text-decoration: none;
    padding: 10px 20px;
    color: inherit;
    transition: all 0.27s cubic-bezier(0, 0, 0.58, 1);
    cursor: pointer;
    border-radius: 3px;
    text-align: center;
    font-weight: 500;
  }

  .tab-btn:hover {
    color: var(--secondary-color);
  }

  .tab-buttons li.active .tab-btn {
    color: var(--primary-color);
    font-weight: 600;
  }

  /* Icon styling */
  .alt-tabs-icon {
    display: block;
    margin-bottom: 12px;
    font-size: 48px;
    letter-spacing: 0;
    text-align: center;
    color: var(--text-color);
    transition: all 0.27s cubic-bezier(0, 0, 0.58, 1);
  }

  .tab-btn:hover .alt-tabs-icon {
    color: var(--secondary-color);
  }

  .tab-buttons li.active .alt-tabs-icon {
    color: var(--primary-color);
  }

  /* Content styling */
  .tab-content-wrapper {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    min-height: 225px; /* Set a minimum height to prevent layout shifts */
  }

  .tab-content {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    visibility: hidden;
    padding: 25px 50px;
    transition:
      opacity 0.3s ease,
      visibility 0.3s ease;

    border-radius: 3px;
  }

  .tab-content.active {
    position: relative;
    opacity: 1;
    visibility: visible;
  }

  /* Responsive adjustments */
  @media only screen and (max-width: 768px) {
    .tab-buttons {
      flex-direction: column;
    }

    .tab-buttons li {
      margin-right: 0;
      margin-bottom: 10px;
    }

    .alt-tabs-icon {
      font-size: 32px;
      margin-bottom: 8px;
    }
  }
</style>
