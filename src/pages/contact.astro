---
import Layout from "../layouts/Layout.astro";

// Initialize form data
const formData = {
  name: "",
  email: "",
  message: "",
};
---

<Layout title="Contact | Jeff Scotti">
  <div id="main" class="site-main">
    <div id="main-content" class="single-page-content">
      <div id="primary" class="content-area">
        <div class="page-title">
          <h1>Contact</h1>
          <div class="page-subtitle">
            <h4>Get in Touch</h4>
          </div>
        </div>

        <div
          id="content"
          class="page-content site-content single-post"
          role="main"
        >
          <div class="contact-section">
            <!-- Contact Form -->
            <div class="contact-form-container">
              <form
                id="contact_form"
                class="contact-form"
                onsubmit="handleSubmit(event)"
              >
                <div
                  id="form-message"
                  class="form-message"
                  style="display: none;"
                >
                </div>
                <div class="form-group form-group-with-icon">
                  <input
                    id="form_name"
                    type="text"
                    name="name"
                    class="form-control"
                    placeholder="Full Name"
                    required
                    value={formData.name}
                  />
                </div>

                <div class="form-group form-group-with-icon">
                  <input
                    id="form_email"
                    type="email"
                    name="email"
                    class="form-control"
                    placeholder="Email"
                    required
                    value={formData.email}
                  />
                </div>

                <div class="form-group form-group-with-icon">
                  <textarea
                    id="form_message"
                    name="message"
                    class="form-control"
                    placeholder="Message"
                    rows="7"
                    required>{formData.message}</textarea
                  >
                </div>

                <button type="submit" class="button btn-send">Submit</button>
              </form>
            </div>

            <!-- Contact Info -->
            <div class="contact-info-container">
              <div class="contact-info">
                <div class="info-list">
                  <div class="info-block">
                    <div class="ci-icon">
                      <i class="fas fa-envelope"></i>
                    </div>
                    <div class="ci-text">
                      <h4>Email</h4>
                      <p>hello@jeffscotti.net</p>
                    </div>
                  </div>

                  <div class="info-block">
                    <div class="ci-icon">
                      <i class="fas fa-map-marker-alt"></i>
                    </div>
                    <div class="ci-text">
                      <h4>Location</h4>
                      <p>San Diego, CA</p>
                    </div>
                  </div>

                  <div class="info-block">
                    <div class="ci-icon">
                      <i class="fas fa-users"></i>
                    </div>
                    <div class="ci-text">
                      <h4>Connect With Me</h4>
                      <div class="social-links">
                        <a href="#" class="social-link" title="LinkedIn"
                          ><i class="fab fa-linkedin-in"></i></a
                        >
                        <a href="#" class="social-link" title="GitHub"
                          ><i class="fab fa-github"></i></a
                        >
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Page structure */
  #main {
    position: relative;
    height: 100%;
    width: 100%;
    padding-top: 70px;
  }
  #main-content {
    position: relative;
    padding: 0;
    max-width: 1280px;
    min-height: 80vh;
    margin: 0 auto;
    padding: 0 30px;
  }
  /* Page title */
  .page-title {
    padding: 50px 0;
    text-align: center;
  }
  .page-title h1 {
    font-size: 32px;
    font-weight: 600;
    color: var(--heading-color);
    margin: 0 0 10px;
  }
  .page-subtitle h4 {
    font-size: 16px;
    font-weight: 400;
    color: var(--text-color);
    margin: 0;
  }
  /* Content blocks */
  .page-content {
    padding-bottom: 50px;
  }
  .block-title {
    margin-bottom: 30px;
  }
  .block-title h2 {
    font-size: 24px;
    color: var(--heading-color);
    margin: 0;
  }
  /* Contact section layout */
  .contact-section {
    display: flex;
    flex-wrap: wrap;
    gap: 30px;
  }
  .contact-form-container {
    flex: 1 1 60%;
    min-width: 300px;
    box-sizing: border-box;
  }
  .contact-info-container {
    flex: 1 1 30%;
    min-width: 250px;
  }
  /* Contact info */
  .contact-info {
    background-color: rgba(40, 40, 40, 0.5);
    border-radius: 8px;
    padding: 25px;
  }
  /* Info list */
  .info-list {
    margin-bottom: 30px;
  }
  .info-block {
    position: relative;
    margin-bottom: 30px;
    padding-left: 50px;
  }
  .ci-icon {
    position: absolute;
    left: 0;
    top: 0;
    width: 40px;
    height: 40px;
    text-align: center;
    font-size: 20px;
    color: #007ced;
  }
  .ci-icon i {
    position: relative;
    top: 5px;
  }
  .ci-text h4 {
    font-size: 16px;
    color: var(--heading-color);
    margin: 0 0 5px;
  }
  .ci-text p {
    font-size: 14px;
    color: var(--text-color);
    margin: 0 0 5px;
  }
  /* Social links */
  .social-links {
    margin-top: 10px;
    text-align: left;
    display: flex;
    gap: 10px;
  }
  .social-link {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--text-color);
    text-align: center;
    font-size: 18px;
    border-radius: 50%;
    transition: all 0.3s ease-in-out;
  }
  .social-link:hover {
    background-color: var(--primary-color);
    color: #fff;
    transform: translateY(-3px);
  }
  /* Contact form */
  .contact-form {
    margin-bottom: 30px;
    width: 100%;
    box-sizing: border-box;
  }
  .form-group {
    position: relative;
    margin-bottom: 20px;
    width: 100%;
    box-sizing: border-box;
  }
  .form-group-with-icon {
    position: relative;
  }
  /* Input and textarea styling */
  .form-control {
    display: block;
    width: 100%;
    box-sizing: border-box;
    border: 2px solid #555;
    border-radius: 5px;
    padding: 10px 25px 10px 12px;
    background: transparent;
    color: #eee;
    transition: border-color 0.3s ease-in-out;
    font-size: 16px; /* Unified font size */
  }
  /* On focus, change the border color to blue */
  .form-control:focus {
    outline: none;
    border-color: #007ced;
  }
  textarea.form-control {
    height: auto;
    min-height: 150px;
  }
  /* Button */
  .button.btn-send {
    display: inline-block;
    position: relative;
    padding: 0.8em 2.1em;
    margin-bottom: 0.75em;
    margin-right: 0.25em;
    font-size: 1em;
    line-height: 1.2;
    border: 2px solid #007ced;
    color: #fff;
    background-color: #333;
    border-radius: 30px;
    font-family: "Poppins", Helvetica, sans-serif;
    transition: all 0.3s ease-in-out;
  }
  .button.btn-send:hover {
    background-color: #007ced;
    color: #fff;
  }
  /* Responsive */
  @media (max-width: 768px) {
    .contact-section {
      flex-direction: column;
    }
    .contact-form-container,
    .contact-info-container {
      width: 100%;
    }
    #main-content {
      padding: 0 15px;
    }
  }
</style>

<script is:inline>
  let isSubmitting = false;
  let formState = {
    name: "",
    email: "",
    message: "",
  };

  // Store form data when input changes
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("contact_form");
    const inputs = form.querySelectorAll("input, textarea");

    inputs.forEach((input) => {
      input.addEventListener("input", (e) => {
        formState[e.target.name] = e.target.value;
      });
    });
  });

  async function handleSubmit(event) {
    event.preventDefault();

    if (isSubmitting) return;

    const form = event.target;
    const submitButton = form.querySelector('button[type="submit"]');
    const messageDiv = document.getElementById("form-message");
    if (!messageDiv) return;

    // Get form data
    const nameInput = form.querySelector("#form_name");
    const emailInput = form.querySelector("#form_email");
    const messageInput = form.querySelector("#form_message");

    if (!nameInput || !emailInput || !messageInput) return;

    const formData = {
      name: nameInput.value,
      email: emailInput.value,
      message: messageInput.value,
    };

    // Store current form state
    formState = { ...formData };

    // Show loading state
    isSubmitting = true;
    submitButton.disabled = true;
    submitButton.textContent = "Sending...";
    messageDiv.style.display = "none";

    try {
      const response = await fetch("/api/contact", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      const data = await response.json();

      if (response.ok) {
        // Success
        messageDiv.textContent = "Message sent successfully!";
        messageDiv.className = "form-message success";
        form.reset();
        formState = { name: "", email: "", message: "" };
      } else {
        // API error
        messageDiv.textContent =
          data.message || "Error sending message. Please try again.";
        messageDiv.className = "form-message error";
      }
    } catch (error) {
      // Network error
      messageDiv.textContent =
        "Error sending message. Please check your connection and try again.";
      messageDiv.className = "form-message error";
    } finally {
      // Reset submit button and show message
      isSubmitting = false;
      submitButton.disabled = false;
      submitButton.textContent = "Submit";
      messageDiv.style.display = "block";
    }
  }
</script>

<style>
  .form-message {
    margin-bottom: 20px;
    padding: 10px 15px;
    border-radius: 5px;
    font-size: 14px;
  }

  .form-message.success {
    background-color: rgba(40, 167, 69, 0.2);
    border: 1px solid #28a745;
    color: #28a745;
  }

  .form-message.error {
    background-color: rgba(220, 53, 69, 0.2);
    border: 1px solid #dc3545;
    color: #dc3545;
  }

  button[type="submit"]:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
</style>
