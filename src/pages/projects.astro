---
import Layout from "../layouts/Layout.astro";
import ProjectView from "../components/ProjectView.astro";
import {projects} from "../data/projects";

const SHOW_FILTER_MENU = true;
const visibleProjects = projects.filter((project) => !project.hidden);
---

<Layout
  title="Portfolio & Projects | Jeff Scotti - Frontend Engineer & UI/UX Designer"
  description="Explore Jeff Scotti's portfolio of web development projects, UI designs, and mobile applications showcasing expertise in React, Vue.js, and modern web technologies."
  type="website"
  keywords={[
    "Jeff Scotti Portfolio",
    "Web Development Projects",
    "UI Design Portfolio",
    "React Projects",
    "Vue.js Applications",
    "Mobile App Development",
    "Frontend Portfolio",
    "UI/UX Case Studies",
    "JavaScript Projects",
  ]}>
  <div id="main" class="site-main">
    <div id="main-content" class="single-page-content">
      <div id="primary" class="content-area">
        <div class="page-title">
          <h1>Projects</h1>
          <div class="page-subtitle">
            <h2>Some of my work</h2>
          </div>
        </div>

        <div id="content" class="page-content site-content single-post" role="main">
          <div class="row">
            <div class="col-xs-12 col-sm-12">
              {
                SHOW_FILTER_MENU && (
                  <ul class="portfolio-filters list-unstyled">
                    <li class="active">
                      <a class="filter btn btn-sm btn-link" data-group="all">
                        All
                      </a>
                    </li>
                    <li>
                      <a class="filter btn btn-sm btn-link" data-group="frontend-engineering">
                        Frontend Engineering
                      </a>
                    </li>
                    <li>
                      <a class="filter btn btn-sm btn-link" data-group="ux-design-research">
                        UX Design & Research
                      </a>
                    </li>
                    <li>
                      <a class="filter btn btn-sm btn-link" data-group="ui-design">
                        UI Design
                      </a>
                    </li>
                  </ul>
                )
              }

              <!-- Portfolio Grid -->
              <div class="portfolio-grid">
                {
                  visibleProjects.map((project) => {
                    const groups = ["all"];

                    if (
                      project.rolePositions.includes("Frontend Engineer") ||
                      project.rolePositions.includes("Lead Frontend Engineer")
                    ) {
                      groups.push("frontend-engineering");
                    }

                    if (
                      project.rolePositions.includes("UX Designer") ||
                      project.rolePositions.includes("Lead UX Designer")
                    ) {
                      groups.push("ux-design-research");
                    }

                    if (
                      project.rolePositions.includes("UI/UX Designer") ||
                      project.rolePositions.includes("Lead UI/UX Designer")
                    ) {
                      groups.push("ui-design");
                    }

                    if (project.technologies.includes("Mobile-First Design")) {
                      groups.push("mobile-first");
                    }

                    if (project.technologies.includes("Chart.js")) {
                      groups.push("data-visualization");
                      groups.push("dashboard");
                    }

                    const idParts = project.id.split("-");
                    let coverImagePath = "";

                    if (project.id === "project-automated-cfe-bill") {
                      coverImagePath =
                        "/images/portfolio/bright/automated_cfe_bill/cover-image.webp";
                    } else if (project.id === "project-async-wizard") {
                      coverImagePath =
                        "/images/portfolio/bright/async_wizard_ux_flow/cover-image.webp";
                    } else if (project.id === "project-biocom-mbc") {
                      coverImagePath =
                        "/images/portfolio/biocom/member_benefits_center/cover-image.webp";
                    } else if (project.id === "project-modalis") {
                      coverImagePath = "/images/portfolio/modalis/cover-image.webp";
                    } else if (project.id === "project-transcript-editor") {
                      coverImagePath = "/images/portfolio/transcript_edit/cover-image.webp";
                    } else if (project.id === "project-quiz-creator") {
                      coverImagePath = "/images/portfolio/quiz_creator/cover-image.webp";
                    } else {
                      coverImagePath = project.images[0]?.src || "";
                    }

                    const projectTags = project.technologies.slice(0, 3);

                    return (
                      <figure class="item" data-groups={JSON.stringify(groups)}>
                        <div class="portfolio-item-img">
                          <img src={coverImagePath} alt={project.title} width="600" height="400" />
                          <a
                            href="#"
                            class="project-link"
                            data-project={project.id}
                            aria-label={`View ${project.title} project details`}
                          />
                        </div>
                        <i class="far fa-file-alt" />
                        <h3 class="name">{project.title}</h3>
                        <span class="category">{project.subtitle}</span>
                        <div class="project-tags">
                          {projectTags.map((tag) => (
                            <span>{tag}</span>
                          ))}
                        </div>
                      </figure>
                    );
                  })
                }
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <ProjectView />
</Layout>

<style>
  .portfolio-filters {
    list-style: none;
    padding: 0;
    margin: 0 0 30px;
    text-align: center;
  }

  .portfolio-filters li {
    display: inline-block;
    margin: 0 2px;
  }

  .portfolio-filters li a {
    display: inline-block;
    color: var(--text-color);
    padding: 5px 12px;
    font-size: 12px;
    text-decoration: none;
    border-radius: 30px;
    transition: all 0.3s ease-in-out;
  }

  .portfolio-filters li.active a,
  .portfolio-filters li a:hover {
    color: var(--button-text-color);
    background-color: var(--primary-color);
  }

  /* Portfolio grid */
  .portfolio-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
    gap: 30px;
    margin-bottom: 50px;
  }

  .item {
    position: relative;
    margin: 0;
    padding: 0;
    background-color: var(--container-bg-color);
    border-radius: 8px;
    overflow: hidden;
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .item:hover {
    transform: translateY(-5px);
  }

  .portfolio-item-img {
    position: relative;
    height: 200px;
    overflow: hidden;
    background-color: var(--container-bg-color);
  }

  .portfolio-item-img img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top left;
  }

  .portfolio-item-preview {
    width: 100%;
    height: 100%;
    background-color: var(--container-bg-color);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-color);
    opacity: 0.6;
    font-size: 1.2rem;
  }

  .portfolio-item-preview::after {
    content: "Project Image";
  }

  .project-link {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .item i {
    display: none;
  }

  .item h3.name {
    padding: 15px 15px 5px;
    font-size: 16px;
    color: var(--heading-color);
    margin: 0;
  }

  .item span.category {
    display: block;
    padding: 0 15px 15px;
    font-size: 12px;
    color: var(--text-color);
  }

  .project-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 5px;
    padding: 0 15px 15px;
  }

  .project-tags span {
    background-color: var(--container-bg-color);
    color: var(--text-color);
    opacity: 0.7;
    padding: 3px 8px;
    border-radius: 4px;
    font-size: 10px;
  }

  @media (max-width: 768px) {
    .portfolio-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script is:inline>
  function initProjectLinks() {
    const filters = document.querySelectorAll(".filter");
    const items = document.querySelectorAll(".item");

    filters.forEach((filter) => {
      filter.addEventListener("click", (e) => {
        e.preventDefault();

        filters.forEach((f) => f.parentElement?.classList.remove("active"));
        filter.parentElement?.classList.add("active");
        const group = filter.getAttribute("data-group") || "all";

        items.forEach((item) => {
          const dataGroups = item.getAttribute("data-groups") || "[]";
          const groups = JSON.parse(dataGroups.replace(/'/g, '"'));

          if (group === "all" || groups.includes(group)) {
            item.style.display = "block";
          } else {
            item.style.display = "none";
          }
        });
      });
    });

    const projectLinks = document.querySelectorAll(".project-link");

    projectLinks.forEach((link) => {
      link.addEventListener("click", (e) => {
        e.preventDefault();
        const projectId = link.getAttribute("data-project");

        if (!projectId) return;

        if (typeof window.initProjectView === "function") {
          window.initProjectView();
        }

        if (typeof window.openProjectView === "function") {
          window.openProjectView(projectId);
        } else {
          setTimeout(() => {
            if (typeof window.openProjectView === "function") {
              window.openProjectView(projectId);
            }
          }, 300);
        }
      });
    });

    function checkForProjectToOpen() {
      let projectId = null;

      if (window.location.hash) {
        projectId = window.location.hash.substring(1); // Remove the # character
        console.log("Found project ID in URL hash:", projectId);
      }

      if (!projectId) {
        const urlParams = new URLSearchParams(window.location.search);
        projectId = urlParams.get("openProject");
        if (projectId) {
          console.log("Found project ID in URL query parameter:", projectId);
        }
      }

      if (!projectId && typeof sessionStorage !== "undefined") {
        projectId = sessionStorage.getItem("openProjectId");
        // Clear from sessionStorage after reading to prevent reopening on refresh
        if (projectId) {
          console.log("Found project ID in sessionStorage:", projectId);
          sessionStorage.removeItem("openProjectId");
        }
      }

      if (projectId) {
        if (typeof window.initProjectView === "function") {
          window.initProjectView();
        } else {
          console.error("initProjectView function not found");
        }

        const tryOpenProject = (attempts = 0) => {
          if (typeof window.openProjectView === "function") {
            window.openProjectView(projectId);
          } else if (attempts < 5) {
            setTimeout(() => tryOpenProject(attempts + 1), 300 * (attempts + 1));
          } else {
            console.error("Failed to open project view after multiple attempts");
          }
        };

        setTimeout(tryOpenProject, 500);
      }
    }

    // Run on initial page load, after navigation, and when hash changes
    checkForProjectToOpen();
    document.addEventListener("astro:after-swap", checkForProjectToOpen);
    window.addEventListener("hashchange", checkForProjectToOpen);
  }

  document.addEventListener("DOMContentLoaded", initProjectLinks);
  document.addEventListener("astro:page-load", initProjectLinks);
</script>
