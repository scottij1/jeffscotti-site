---
import Layout from "../layouts/Layout.astro";
---

<Layout title="API Test | Jeff Scotti" description="Test page for API endpoints" type="website">
  <div class="container">
    <h1>API Test Page</h1>

    <div class="test-section">
      <h2>Environment Variables Test</h2>
      <button id="test-env-btn" class="btn">Test Environment Variables</button>
      <pre id="test-env-result" class="result"></pre>
    </div>

    <div class="test-section">
      <h2>Contact Form API Test</h2>
      <form id="test-form" class="test-form">
        <div class="form-group">
          <label for="name">Name:</label>
          <input type="text" id="name" name="name" value="Test User" required />
        </div>

        <div class="form-group">
          <label for="email">Email:</label>
          <input type="email" id="email" name="email" value="test@example.com" required />
        </div>

        <div class="form-group">
          <label for="message">Message:</label>
          <textarea id="message" name="message" required>This is a test message.</textarea>
        </div>

        <button type="submit" class="btn">Test Contact API</button>
      </form>
      <pre id="test-form-result" class="result"></pre>
    </div>
  </div>
</Layout>

<style>
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem;
  }

  h1 {
    margin-bottom: 2rem;
  }

  .test-section {
    margin-bottom: 3rem;
    padding: 1.5rem;
    border: 1px solid #444;
    border-radius: 8px;
    background-color: rgba(30, 30, 30, 0.5);
  }

  .btn {
    padding: 0.5rem 1rem;
    background-color: #0077cc;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
  }

  .btn:hover {
    background-color: #0066b3;
  }

  .result {
    margin-top: 1rem;
    padding: 1rem;
    background-color: #1e1e1e;
    border-radius: 4px;
    overflow-x: auto;
    white-space: pre-wrap;
    min-height: 100px;
  }

  .form-group {
    margin-bottom: 1rem;
  }

  label {
    display: block;
    margin-bottom: 0.5rem;
  }

  input,
  textarea {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #444;
    border-radius: 4px;
    background-color: #2a2a2a;
    color: white;
  }

  textarea {
    min-height: 100px;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // Test environment variables
    const testEnvBtn = document.getElementById("test-env-btn") as HTMLButtonElement | null;
    const testEnvResult = document.getElementById("test-env-result") as HTMLPreElement | null;

    if (testEnvBtn && testEnvResult) {
      testEnvBtn.addEventListener("click", async () => {
        testEnvResult.textContent = "Loading...";
        try {
          const response = await fetch("/api/test-env");
          const data = await response.json();
          testEnvResult.textContent = JSON.stringify(data, null, 2);
        } catch (error: any) {
          testEnvResult.textContent = `Error: ${error?.message || "Unknown error"}`;
        }
      });
    }

    // Test contact form API
    const testForm = document.getElementById("test-form") as HTMLFormElement | null;
    const testFormResult = document.getElementById("test-form-result") as HTMLPreElement | null;

    if (testForm && testFormResult) {
      testForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        testFormResult.textContent = "Sending...";

        const nameInput = document.getElementById("name") as HTMLInputElement | null;
        const emailInput = document.getElementById("email") as HTMLInputElement | null;
        const messageInput = document.getElementById("message") as HTMLTextAreaElement | null;

        if (!nameInput || !emailInput || !messageInput) {
          testFormResult.textContent = "Error: Form elements not found";
          return;
        }

        const formData = {
          name: nameInput.value,
          email: emailInput.value,
          message: messageInput.value,
        };

        try {
          const response = await fetch("/api/contact-form", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(formData),
          });

          const responseText = await response.text();
          let data;

          try {
            data = JSON.parse(responseText);
            testFormResult.textContent = JSON.stringify(data, null, 2);
          } catch (parseError) {
            testFormResult.textContent = `Response (not JSON): ${responseText}`;
          }
        } catch (error: any) {
          testFormResult.textContent = `Error: ${error?.message || "Unknown error"}`;
        }
      });
    }
  });
</script>
